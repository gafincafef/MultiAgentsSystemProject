package edu.rits.ma.jade.concurrency;

import edu.rits.ma.jade.dataobject.CondVar;

public class CondVarManager implements ICondVarReleaser, ICondVarAcquirer {

	@Override
	public void waitOn(CondVar condVar) {
		synchronized(condVar) {
			while(condVar.isReleasable()) {
				try {
					condVar.wait();
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		}
	}

	@Override
	public void release(CondVar condVar) {
		synchronized(condVar) {
			int currentThresold = condVar.getReleaseThreshold();
			currentThresold--;
			condVar.setReleaseThreshold(currentThresold);
			if(currentThresold <= 0) {
				condVar.notifyAll();
			}
		}
	}

}
