package edu.rits.ma.jade.agent;

import java.util.ArrayList;
import java.util.List;

import edu.rits.ma.common.ITask;

import jade.domain.DFService;
import jade.domain.FIPAException;
import jade.wrapper.AgentController;
import jade.wrapper.StaleProxyException;
import jade.wrapper.gateway.GatewayAgent;

public class PrimaryAgent extends GatewayAgent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4166260446398994126L;
	private List<AgentController> mSecondaryAgentControllers = new ArrayList<AgentController>();

	@Override
	protected void setup() {
		super.setup();
		System.out.println("Setup called on agent sample " + getAID().getLocalName()
				+ " in container " + getAMS().getName());
		setEnabledO2ACommunication(true, 0);
		
		try {
			onSetupArgumentsParsed();
		}
		catch(Exception e) {
			e.printStackTrace();
			doDelete();
		}
	}

	@Override
	protected void processCommand(java.lang.Object command) {
		List<ITask> tasks = (List<ITask>) command;
	}

	@Override
	protected void takeDown() {
		clearSecondaryAgentControllers();
		super.takeDown();
		try {
			DFService.deregister(this);
		} catch (FIPAException e) {
			e.printStackTrace();
		}
	}

	private void onSetupArgumentsParsed() throws Exception {
		Object[] args = getArguments();
		if(args != null && args.length > 0) {
			int numberOfSecondaryAgents = (Integer) args[0];
			String secondaryAgentClassName = (String) args[1];
			createAndStartSecondaryAgents(numberOfSecondaryAgents, secondaryAgentClassName);
		}
	}

	private void createAndStartSecondaryAgents(int numberOfSecondaryAgents, String secondaryAgentClassName) throws StaleProxyException {
		clearSecondaryAgentControllers();
		for(int i = 0; i < numberOfSecondaryAgents; i++) {
			String secondaryAgentInstanceName = "SecondaryAgent" + i;
			AgentController ac = getContainerController().createNewAgent(secondaryAgentInstanceName, secondaryAgentClassName, null);
			ac.start();
			mSecondaryAgentControllers.add(ac);
		}
		waitAllSecondaryAgentsStart();
	}

	private void clearSecondaryAgentControllers() {
		//TODO Implement
	}

	private void waitAllSecondaryAgentsStart() {
		//TODO Implement
	}
}
