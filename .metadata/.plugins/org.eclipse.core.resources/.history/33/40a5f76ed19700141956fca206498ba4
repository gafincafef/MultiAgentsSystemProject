package edu.rits.ma.jade.agent;

import jade.wrapper.AgentController;
import jade.wrapper.StaleProxyException;
import jade.wrapper.gateway.GatewayAgent;
import edu.rits.ma.jade.dataobject.CondVar;

import java.util.ArrayList;
import java.util.List;

import edu.rits.ma.jade.behaviour.TaskProcessorBehaviour;

public class PrimaryAgent extends GatewayAgent implements ICondVarAcquirer, ICondVarReleaser{

	/**
	 * 
	 */
	private static final long serialVersionUID = 4166260446398994126L;

	private CondVar mCondVarToRelease = null;
	private List<AgentController> mSecondaryAgentControllers = new ArrayList<AgentController>();

	@Override
	protected void setup() {
		super.setup();
		System.out.println("Setup called on primary agent " + getAID().getLocalName()
				+ " in container " + getAMS().getName());
		setEnabledO2ACommunication(true, 0);

		try {
			onSetupArgumentsParsed(getArguments());
		}
		catch(Exception e) {
			e.printStackTrace();
			doDelete();
		}

		onSetupEnd();
	}

	@Override
	protected void processCommand(java.lang.Object command) {
		addBehaviour(new TaskProcessorBehaviour(command, mSecondaryAgentControllers, this));
	}

	@Override
	protected void takeDown() {
		stopSecondaryAgents();
		super.takeDown();
	}

	@Override
	public void release(CondVar condVar) {
		// TODO Auto-generated method stub

	}

	@Override
	public void waitOn(CondVar condVar) {
		// TODO Auto-generated method stub

	}

	private void onSetupEnd() {
		if(mCondVarToRelease != null) {
			release(mCondVarToRelease);
		}
	}

	private void onSetupArgumentsParsed(Object[] args) throws Exception {
		if(args != null && args.length > 0) {
			mCondVarToRelease = (CondVar) args[0];
			int numberOfSecondaryAgents = (Integer) args[1];
			String secondaryAgentClassName = (String) args[2];
			createAndStartSecondaryAgents(numberOfSecondaryAgents, secondaryAgentClassName);
		}
	}

	private void createAndStartSecondaryAgents(int numberOfSecondaryAgents, String secondaryAgentClassName) throws StaleProxyException {
		stopSecondaryAgents();
		CondVar condVarToAcquire = new CondVar();
		condVarToAcquire.setReleaseThreshold(numberOfSecondaryAgents);
		
		for(int i = 0; i < numberOfSecondaryAgents; i++) {
			String secondaryAgentInstanceName = "SecondaryAgent" + i;
			AgentController ac = getContainerController().createNewAgent(secondaryAgentInstanceName, secondaryAgentClassName, null);
			ac.start();
			mSecondaryAgentControllers.add(ac);
		}
		waitAllSecondaryAgentsStart();
	}

	private void stopSecondaryAgents() {
		//TODO Implement
	}

	private void waitAllSecondaryAgentsStart() {
		//TODO Implement
	}
}
